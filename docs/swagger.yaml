basePath: /api
definitions:
  models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.ExportRequest:
    properties:
      filename:
        type: string
      objects:
        items:
          additionalProperties: true
          type: object
        type: array
    type: object
  models.FiscalModuleCreateRequest:
    properties:
      factory_number:
        type: string
      fiscal_number:
        type: string
      is_active:
        type: boolean
      user_id:
        type: integer
    type: object
  models.FiscalModuleResponse:
    properties:
      factory_number:
        type: string
      fiscal_number:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      user_id:
        type: integer
    type: object
  models.FiscalModuleUpdateRequest:
    properties:
      factory_number:
        type: string
      fiscal_number:
        type: string
      is_active:
        type: boolean
      user_id:
        type: integer
    type: object
  models.Terminal:
    properties:
      address:
        type: string
      assembly_number:
        type: string
      cash_register_number:
        type: string
      company_name:
        type: string
      created_at:
        type: string
      database_update_date:
        type: string
      free_record_balance:
        type: integer
      id:
        type: integer
      inn:
        type: string
      is_active:
        type: boolean
      last_request_date:
        type: string
      module_number:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  models.TerminalCreateRequest:
    properties:
      address:
        type: string
      assembly_number:
        type: string
      cash_register_number:
        type: string
      company_name:
        type: string
      database_update_date:
        type: string
      free_record_balance:
        type: integer
      inn:
        type: string
      last_request_date:
        type: string
      module_number:
        type: string
    type: object
  models.TerminalExistsRequest:
    properties:
      cash_register_number:
        type: string
    type: object
  models.TerminalExistsResponse:
    properties:
      id:
        type: integer
    type: object
  models.TerminalStatusResponse:
    properties:
      is_active:
        type: boolean
    type: object
  models.TerminalUpdateRequest:
    properties:
      address:
        type: string
      assembly_number:
        type: string
      cash_register_number:
        type: string
      company_name:
        type: string
      database_update_date:
        type: string
      free_record_balance:
        type: integer
      inn:
        type: string
      is_active:
        type: boolean
      last_request_date:
        type: string
      module_number:
        type: string
      user_id:
        type: integer
    type: object
  models.User:
    properties:
      company_name:
        type: string
      created_at:
        type: string
      id:
        type: integer
      inn:
        type: string
      is_active:
        type: boolean
      is_admin:
        type: boolean
      password:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  models.UserCreateRequest:
    properties:
      company_name:
        type: string
      inn:
        type: string
      is_active:
        type: boolean
      is_admin:
        type: boolean
      password:
        type: string
      username:
        type: string
    type: object
  models.UserLoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.UserLoginResponse:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/models.User'
    type: object
  models.UserUpdateRequest:
    properties:
      company_name:
        type: string
      inn:
        type: string
      is_active:
        type: boolean
      is_admin:
        type: boolean
      password:
        type: string
      username:
        type: string
    type: object
host: txkm-vipos.uz
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Terminal Backend
  version: "3.25"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate a user and return a token
      parameters:
      - description: User login credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/models.UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserLoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Login user
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with the given input
      parameters:
      - description: User registration info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Register a new user
      tags:
      - auth
  /export:
    post:
      consumes:
      - application/json
      description: Export given data to XLSX format
      parameters:
      - description: Export request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ExportRequest'
      produces:
      - application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
      responses:
        "200":
          description: exported_data.xlsx
          schema:
            type: file
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - Bearer: []
      summary: Export data to XLSX
      tags:
      - export
  /fiscal-modules:
    get:
      consumes:
      - application/json
      description: Get a list of all fiscal modules
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.FiscalModuleResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - Bearer: []
      summary: List all fiscal modules
      tags:
      - fiscal-modules
    post:
      consumes:
      - application/json
      description: Create a new fiscal module with the given input
      parameters:
      - description: Create fiscal module request
        in: body
        name: fiscal_module
        required: true
        schema:
          $ref: '#/definitions/models.FiscalModuleCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.FiscalModuleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - Bearer: []
      summary: Create a new fiscal module
      tags:
      - fiscal-modules
  /fiscal-modules/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a fiscal module by its ID
      parameters:
      - description: Fiscal Module ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - Bearer: []
      summary: Delete a fiscal module
      tags:
      - fiscal-modules
    get:
      consumes:
      - application/json
      description: Get details of a fiscal module by its ID
      parameters:
      - description: Fiscal Module ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.FiscalModuleResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - Bearer: []
      summary: Get a fiscal module by ID
      tags:
      - fiscal-modules
    put:
      consumes:
      - application/json
      description: Update a fiscal module's details by its ID
      parameters:
      - description: Fiscal Module ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update fiscal module request
        in: body
        name: fiscal_module
        required: true
        schema:
          $ref: '#/definitions/models.FiscalModuleUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.FiscalModuleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - Bearer: []
      summary: Update a fiscal module
      tags:
      - fiscal-modules
  /terminals:
    get:
      consumes:
      - application/json
      description: Get a list of all terminals
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Terminal'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - Bearer: []
      summary: List all terminals
      tags:
      - terminals
    post:
      consumes:
      - application/json
      description: Create a new terminal with the given input
      parameters:
      - description: Create terminal request
        in: body
        name: terminal
        required: true
        schema:
          $ref: '#/definitions/models.TerminalCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Terminal'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - Bearer: []
      summary: Create a new terminal
      tags:
      - terminals
  /terminals/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a terminal by its ID
      parameters:
      - description: Terminal ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - Bearer: []
      summary: Delete a terminal
      tags:
      - terminals
    get:
      consumes:
      - application/json
      description: Get details of a terminal by its ID
      parameters:
      - description: Terminal ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Terminal'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - Bearer: []
      summary: Get a terminal by ID
      tags:
      - terminals
    put:
      consumes:
      - application/json
      description: Update a terminal's details by its ID
      parameters:
      - description: Terminal ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update terminal request
        in: body
        name: terminal
        required: true
        schema:
          $ref: '#/definitions/models.TerminalUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Terminal'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - Bearer: []
      summary: Update a terminal
      tags:
      - terminals
  /terminals/exists:
    get:
      consumes:
      - application/json
      description: Get an exists of terminal by CashRegister
      parameters:
      - description: Get an exists request
        in: body
        name: terminal
        required: true
        schema:
          $ref: '#/definitions/models.TerminalExistsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TerminalExistsResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - Bearer: []
      summary: Get an exists of terminal by CashRegister
      tags:
      - terminals
  /terminals/status/{id}:
    get:
      consumes:
      - application/json
      description: Get status of terminal by its ID
      parameters:
      - description: Terminal ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TerminalStatusResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - Bearer: []
      summary: Get a status of terminal by ID
      tags:
      - terminals
  /users:
    get:
      consumes:
      - application/json
      description: Get a list of all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - Bearer: []
      summary: List all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user with the given input
      parameters:
      - description: Create user request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - Bearer: []
      summary: Create a new user
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user by its ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - Bearer: []
      summary: Delete a user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get details of a user by its ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - Bearer: []
      summary: Get a user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update a user's details by its ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update user request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - Bearer: []
      summary: Update a user
      tags:
      - users
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
